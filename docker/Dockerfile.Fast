FROM centos:centos7

RUN yum -y install deltarpm
RUN yum -y update && \
    yum -y install \
    epel-release \
    httpd \
    httpd-tools \
     httpd-devel \
    unzip ksh zip unzip \
    yum-utils nano which wget epel-release  \
    && yum groupinstall -y 'Development tools' \
	&& yum -y install mod_proxy_uwsgi mod_proxy_html libssh2-devel apr-devel   apr-util-devel

RUN yum -y install libxml2-devel sqlite-devel libcurl-devel oniguruma-devel unixODBC-devel libtidy-devel libxslt-devel \
    libpng-devel freetype-devel unixODBC unixODBC-devel postgresql-odbc redis mlocate \
    && updatedb

RUN yum install -y https://rpms.remirepo.net/enterprise/remi-release-7.rpm

RUN yum install -y --enablerepo=remi-php81 php php-mcrypt php-cli php-gd php-curl php-mysql \
    php-ldap php-zip php-fileinfo  php-xdebug  php-pear php-devel php-sockets php-mbstring \
    php81-php-oci8 php81-php-devel php81-php-pecl-ssh2 php-pecl-ssh2

RUN yum install -y  --enablerepo=remi-php81    php81-php-odbc  php81-php-pdo_odbc

RUN cp /etc/opt/remi/php81/php.d/20-odbc.ini /etc/php.d/20-odbc.ini \
&& cp /etc/opt/remi/php81/php.d/30-pdo_odbc.ini /etc/php.d/30-pdo_odbc.ini \
    && cp /opt/remi/php81/root/usr/lib64/php/modules/odbc.so /usr/lib64/php/modules/odbc.so \
    && cp /opt/remi/php81/root/usr/lib64/php/modules/pdo_odbc.so /usr/lib64/php/modules/pdo_odbc.so


##prepare other installs
ARG FOLDERNAME=installtemp \
    PHP_VERSION=8.1.17 \
    APACHE_VERSION=2.4.6 \
    PHP_VERSION_SHORT=81 \
    PHP_INSTALL_FOLDER=php-$PHP_VERSION

ENV FOLDERNAME=$FOLDERNAME \
    PHP_VERSION=$PHP_VERSION \
    APACHE_VERSION=$APACHE_VERSION \
    PHP_VERSION_SHORT=$PHP_VERSION_SHORT \
    PHP_INSTALL_FOLDER=$PHP_INSTALL_FOLDER


RUN mkdir -p /$FOLDERNAME
RUN chmod 777 -R /$FOLDERNAME

#composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

#sql server
RUN yum install -y --enablerepo=remi-php80  unixODBC-devel
RUN pecl install sqlsrv pdo_sqlsrv

RUN curl https://packages.microsoft.com/config/rhel/7/prod.repo > /etc/yum.repos.d/mssql-release.repo
RUN ACCEPT_EULA=Y yum install -y msodbcsql17
RUN ACCEPT_EULA=Y yum install -y mssql-tools
RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
RUN source ~/.bashrc

RUN echo extension=pdo_sqlsrv.so >> `php --ini | grep "Scan for additional .ini files" | sed -e "s|.*:\s*||"`/30-pdo_sqlsrv.ini
RUN echo extension=sqlsrv.so >> `php --ini | grep "Scan for additional .ini files" | sed -e "s|.*:\s*||"`/20-sqlsrv.ini

#insatll nvm for node for any version
WORKDIR $FOLDERNAME
RUN  curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash


RUN yum clean all \
&&  yum install -y supervisor beanstalkd iproute xclip zsh net-tools

#added systemctl alternative
RUN wget https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py -O /usr/local/bin/systemctl
RUN chmod 755 /usr/local/bin/systemctl

RUN mkdir -p /var/log/xdebug/
RUN mkdir -p /var/log/xdebug/trace

RUN touch /var/log/xdebug/xdebug.log
RUN /bin/bash -c "mkdir -p /var/log/php"
RUN touch /var/log/php/mono.log
RUN touch /var/log/php/error.log
RUN chmod -R +rwX  /var/log/
RUN chown -R apache:apache /var/log/
RUN chown -R apache:apache /var/www/html

COPY docker/config/php/php-custom-dev.ini /etc/php.ini
COPY docker/config/php/php.ini /$FOLDERNAME/php-additional.ini
COPY docker/config/alias.txt /$FOLDERNAME/aliases

RUN cat /$FOLDERNAME/aliases >> /root/.bashrc
RUN cat /$FOLDERNAME/php-additional.ini >> /etc/php.ini


# Update Apache Configuration
ENV HTTPD_MAIN_CONF_PATH=/etc/httpd/conf \
	HTTPD_DATA_ORIG_PATH=/var/www \
	HTTPD_MAIN_CONF_D_PATH=/etc/httpd/conf.d \
	APP_DATA=${APP_ROOT}/src  \
	HTTPD_VAR_PATH=/var \
	APACHE_LOG_DIR=/var/log/httpd \
	SLIM_MODE=testing \
    	CI_ENV=testing \
    	SOME_KEY=someValue

RUN mkdir -p /etc/httpd/sites-enabled
RUN mkdir -p /etc/httpd/sites-available

# Add a simple Python script that returns "Hello, World!"
RUN #mkdir /var/www/cgi-bin
RUN chown -R apache:apache /var/www/cgi-bin
RUN chmod -R 777 /var/www/cgi-bin

RUN chown -R apache:apache /var/www/html

RUN  cp /etc/httpd/conf/httpd.conf /$FOLDERNAME/httpdFROMDOCKER.conf
COPY  docker/config/httpd/httpd.conf /etc/httpd/conf/httpd.conf
COPY docker/config/httpd/apache.conf /etc/httpd/sites-enabled/000-default.conf
COPY docker/config/httpd/apache.conf /etc/httpd/sites-available/000-default.conf

COPY docker/config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/config/start-container /usr/local/bin/start-container
RUN chmod +x /usr/local/bin/start-container

#ENV PHP_INI_SCAN_DIR=/usr/local/etc/php/conf.d

RUN mkdir -p /var/www/html/storage/logs/
RUN chmod -R +rwX  /var/www/html/storage/logs/
RUN chown -R apache:apache /var/www/html/storage/logs/
RUN chmod -R 777 /var/www/html/storage/logs/

#RUN export HISTTIMEFORMAT="%F %T "
RUN echo 'export HISTTIMEFORMAT="%F %T "' >> /root/.bashrc

WORKDIR "/var/www/html"

CMD ["/bin/bash","start-container"]
